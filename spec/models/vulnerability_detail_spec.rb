require 'rails_helper'

RSpec.describe VulnerabilityDetail, type: :model do
  let(:vulndetail) { FactoryGirl.create(:vulnerability_detail) }

  it { is_expected.to have_many(:vulnerabilities) }
  it { is_expected.to validate_presence_of(:name) }
  it { is_expected.to validate_presence_of(:nvt) }

  it "should get plain factory working" do
    f = FactoryGirl.create(:vulnerability_detail)
    g = FactoryGirl.create(:vulnerability_detail)
    expect(f).to validate_uniqueness_of(:nvt).case_insensitive
    expect(f).to validate_uniqueness_of(:name).case_insensitive
    expect(f).to be_valid
    expect(g).to be_valid
  end

  it "to_s returns value" do
    f = FactoryGirl.create(:vulnerability_detail, name: 'VeryNewVuln')
    expect("#{f}").to match ("VeryNewVuln")
  end

  describe "#cves_string=()" do
    it "parses array data from string" do
      vulndetail.update(cves_string: "CVE-111, CVE-222")
      vulndetail.reload
      expect(vulndetail.cves).to contain_exactly("CVE-111", "CVE-222")
    end
  end

  describe "#cves_string" do
    it "parses array data from string" do
      vulndetail.update(cves: ["CVE-111", "CVE-222"])
      vulndetail.reload
      expect(vulndetail.cves_string).to eq("CVE-111, CVE-222")
    end
  end

  describe "#bids_string=()" do
    it "parses array data from string" do
      vulndetail.update(bids_string: "111, 222")
      vulndetail.reload
      expect(vulndetail.bids).to contain_exactly("111", "222")
    end
  end

  describe "#bids_string" do
    it "parses array data from string" do
      vulndetail.update(bids: ["111", "222"])
      vulndetail.reload
      expect(vulndetail.bids_string).to eq("111, 222")
    end
  end

  describe "#xrefs_string=()" do
    it "parses array data from string" do
      vulndetail.update(xrefs_string: "http://hallothere, http://hithis")
      vulndetail.reload
      expect(vulndetail.xrefs).to contain_exactly("URL:http://hallothere", "URL:http://hithis")
    end
  end

  describe "#xrefs_string" do
    it "parses array data from string" do
      vulndetail.update(xrefs: ["URL:http://hallothere", "URL:http://hithis"])
      vulndetail.reload
      expect(vulndetail.xrefs_string).to eq("http://hallothere, http://hithis")
    end
  end

end
