##
# Query object mainly for use in vulnerabilities_controller
#
class VulnerabilityQuery
  attr_reader :search_options, :query

  ##
  # possible search options:
  # * :lid - host.location.lid (string)
  # * :name - string
  # * :ip - May be a substring or a cidr address with /mask
  # * :operating_system - string
  # * :threat - string
  # * :severity - string
  # * :lastseen - date
  # * :limit - limit result (integer)
  #
  # please note: 
  # joins(:host, :vulnerability_detail, :location, :operating_system) must exist in relation.
  #
  def initialize(relation, search_options = {})
    @relation       = relation
    @search_options = search_options.symbolize_keys!
    @limit          = false
    @query          ||= build_query
  end

  ##
  # get all matching activities
  def all
    query
  end

  ## 
  # iterate with block 
  def find_each(&block)
    query.find_each(&block)
  end

  ##
  # true if the resulting query contains the specified vulnerability
  def include?(vuln)
    query.where(id: vuln.id).limit(1).any?
  end

private
  attr_accessor :relation, :limit

  def build_query
    query = relation
    search_string = [] # for global search_option :search
    search_value  = search_options.fetch(:search, false) # for global option :search
    search_options.each do |key,value|
      case key 
      when :limit
        @limit = value
      when :ip
        if value =~ /\/\d{1,2}\z/
          query = query.where("hosts.ip <<= ?", value)
        else
          query = query.where("host(hosts.ip) ILIKE ?", "#{value}%")
        end
      when :lastseen
        # query = query.where("to_char(vulnerabilities.lastseen, 'IYYY-MM-DD') ILIKE ?", "#{value}%")
      when :operating_system
        query = query.where("operating_systems.name ILIKE ?", "%#{value}%")
      when :name
        query = query.where("vulnerability_details.name ILIKE ?", "%#{value}%")
      when :severity
        query = query.where("vulnerability_details.severity > ?", "#{value}")
      when :threat
        query = query.where("vulnerability_details.threat ILIKE ?", "#{value}%")
      when :lid
        query = query.where("locations.lid ILIKE ?", "#{value}%")
      when :search
        if search_value =~ /\/\d{1,2}\z/
          search_string << "hosts.ip <<= '#{search_value}'"
        else
          search_string << "host(hosts.ip) ILIKE :search"
        end
        search_string << "to_char(vulnerabilties.lastseen, 'IYYY-MM-DD') ILIKE :search"
        search_string << "locations.lid ILIKE :search"
      else
        raise ArgumentError, "unknown search option #{key}"
      end
    end
    if search_value
      query = query.where(search_string.join(' or '), search: "%#{search_value}%")
     end
    if limit
      query.limit(limit)
    else
      query
    end
  end
end
