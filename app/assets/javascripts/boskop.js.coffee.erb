# --- GLOBALS
$.datepicker.setDefaults($.datepicker.regional['de'])
$.datepicker.setDefaults({
      changeYear: true,
      changeMonth: true,
      dateFormat: "yy-mm-dd",
      yearRange: '2000:2099',
})

DataTable = $.fn.dataTable
$.extend( true, DataTable.Buttons.defaults, {
  dom:
    button:
      className: 'btn btn-outline-secondary btn-sm'
})

ready = ->
  $('form').dirtyForms
    message: "Sie haben Änderungen noch nicht gespeichert. Wenn Sie jetzt weitermachen, verlieren Sie ungesicherte Änderungen."

  $('table tfoot th').each  (idx) ->
    unless $(this).hasClass("nosearch")
      title = $('table thead th').eq( $(this).index() ).text()
      $(this).html( '<input type="text" placeholder="<%= I18n.t('boskop.search') %>" name="idx'+idx+'" />' )

  # --- simple datatable ---
  xtable = $('table[role="xdatatable"]' ).DataTable(
    pagingType: "full_numbers"
    language:
      url: "<%= asset_path('dataTable.german.txt') %>"
  )

  # --- classic datatable ---
  table = $('table[role="datatable"], table[role="wobauth_datatable"]' ).DataTable(
    pagingType: "full_numbers"
    dom: "<'row'<'col-md-3'l><'col-md-5'BC><'col-md-4'f>>t<'row'<'col-md-6'ir><'col-md-6'p>>"
    stateSave: true
    lengthMenu: [ [10, 25, 100, 250, 1000], [10, 25, 100, 250, 1000] ]
    language:
      url: "<%= asset_path('dataTable.german.txt') %>"
    buttons: [
      {
        extend: 'csv',
        title: $('table[role="datatable"]').data('title')
        exportOptions: {
          selected: false,
          columns: ':visible',
          search: ':applied'
        }
      },
      {
        extend: 'excel',
        title: $('table[role="datatable"]').data('title')
        exportOptions: {
          selected: false,
          columns: ':visible',
          search: ':applied'
        }
      },
      {
        extend: 'pdf',
        orientation: 'landscape',
        pageSize: 'A4',
        exportOptions: {
          selected: false,
          columns: ':visible',
          search: ':applied'
        }
      },
      {
        extend: 'print',
      },
      {
        extend: 'colvis',
        text: "<%= I18n.t('boskop.change_columns') %>",
        columns: ':gt(0)'
      }
    ],
    columnDefs: [
      { "targets": "nosort", "orderable": false },
      { "targets": "notvisible", "visible": false }
    ]
  )
  if $('table[role="datatable"]').length
    table.columns().eq(0).each (colIdx) ->
      $('input[name=idx'+colIdx+']').on( 'keyup change', ->
        table.column(colIdx).search(this.value).draw()
      )
  # if table.length
  table.columns().search('').draw()
  $('input[type=search]').val("").trigger('input')

  $("#reset_table").on("click",  ->
    $('input[type=text]').val("")
    table.columns().search('').draw()
    $('input[type=search]').val("").trigger('input')
  )
  # --- end classic datatable ---

  # --- remote datatable ---
  remotetableurl = $('table[role="remotetable"]').data('url')
  remotetable = $('table[role="remotetable"]').DataTable(
    searchDelay: 400
    processing: true
    serverSide: true
    ajax:
      url: remotetableurl
      type: "POST"
    pagingType: "full_numbers"
    dom: "<'row'<'col-md-3'l><'col-md-5'BC><'col-md-4'f>>t<'row'<'col-md-6'ir><'col-md-6'p>>"
    stateSave: true
    lengthMenu: [ [10, 25, 100, 250, 1000], [10, 25, 100, 250, 1000] ]
    language:
      url: "<%= asset_path('dataTable.german.txt') %>"
    buttons: [
      {
        extend: 'csv'
        title: $('table[role="remotetable"]').data('title')
        text: 'CSV'
        exportOptions: {
          columns: ':visible',
          search: ':applied'
        }
      },
      {
        extend: 'excel'
        title: $('table[role="remotetable"]').data('title')
        text: 'Excel'
        exportOptions: {
          columns: ':visible',
          search: ':applied'
        }
      },
      {
        extend: 'pdf',
        orientation: 'landscape',
        pageSize: 'A4',
        title: $('table[role="remotetable"]').data('title')
        text: 'PDF'
        exportOptions: {
          columns: ':visible',
          search: ':applied'
        }
      },
      {
        extend: 'print',
      },
      {
        extend: 'colvis',
        text: "<%= I18n.t('boskop.change_columns') %>",
        columns: ':gt(0)'
      }
    ],
    columnDefs: [
      { "targets": "nosort", "orderable": false },
      { "targets": "notvisible", "visible": false }
    ]
  )
  if $('table[role="remotetable"]').length
    remotetable.columns().eq(0).each (colIdx) ->
      mysearch = $.debounce(400, (val) ->
        remotetable.column(colIdx).search(val).draw()
      )
      $('input[name=idx'+colIdx+']').on( 'keyup change', ->
        if (this.value.length >= 2  || this.value.length == 0)
          mysearch(this.value)
      )

  $("#reset_table").on("click",  ->
    $('input[type=text]').val("")
    remotetable.columns().search('').draw()
    $('input[type=search]').val("").trigger('input')
  )
  # --- end remote datatable ---

  $('.select2').select2
    width: 'element'

  $(".datepicker").datepicker()

  eol_pivot = ->
    sum = $.pivotUtilities.aggregatorTemplates.sum
    numberFormat = $.pivotUtilities.numberFormat
    intFormat = numberFormat({digitsAfterDecimal: 0})
    $("#eol_pivot").pivot($("#eol_summary"),
      rows: ["Operating System"]
      cols: ["LID"]
      aggregator: sum(intFormat)(["Hosts"])
    )

  if $("#eol_pivot").length > 0
    eol_pivot()
    table = $('#eol_summary').DataTable(
      lengthMenu: [ -1]
      drawCallback: (settings) ->
        eol_pivot()
      dom: "<'row'<'col-md-3'l><'col-md-5'BC><'col-md-4'f>>t<'row'<'col-md-6'ir><'col-md-6'p>>"
      buttons: [
        {
          extend: 'csv',
          sheetName: 'raw',
          filename: 'boskop-eol-matrix',
          title: '',
          exportOptions: {
            selected: false,
            columns: ':visible',
            search: ':applied'
          }
        },
        {
          extend: 'excel',
          sheetName: 'raw',
          filename: 'boskop-eol-matrix',
          title: '',
          exportOptions: {
            selected: false,
            columns: ':visible',
            search: ':applied'
          }
        }
      ]
    )

  vuln_risk_pivot = ->
    sum = $.pivotUtilities.aggregatorTemplates.sum
    numberFormat = $.pivotUtilities.numberFormat
    intFormat = numberFormat({digitsAfterDecimal: 0})
    $("#matrix_pivot").pivot($("#matrix_summary"),
      rows: ["Risk"]
      cols: ["LID"]
      aggregator: sum(intFormat)(["Hosts"])
    )

  if $("#matrix_pivot").length > 0
    vuln_risk_pivot()
    table = $('#matrix_summary').DataTable(
      lengthMenu: [ -1]
      drawCallback: (settings) ->
        vuln_risk_pivot()
      dom: "<'row'<'col-md-3'l><'col-md-5'BC><'col-md-4'f>>t<'row'<'col-md-6'ir><'col-md-6'p>>"
      buttons: [
        {
          extend: 'csv',
          sheetName: 'raw',
          filename: 'boskop-vuln-risk-matrix',
          title: '',
          exportOptions: {
            selected: false,
            columns: ':visible',
            search: ':applied'
          }
        },
        {
          extend: 'excel',
          sheetName: 'raw',
          filename: 'boskop-vuln-risk-matrix',
          title: '',
          exportOptions: {
            selected: false,
            columns: ':visible',
            search: ':applied'
          }
        }
      ]
    )

$(document).on('turbolinks:load', ready)
